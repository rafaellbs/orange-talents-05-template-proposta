#spring.datasource.url=jdbc:mysql://${DOMINIO_BANCO:localhost}:3306/proposta

spring.datasource.url=jdbc:mysql://${MYSQL_HOST:localhost}:3306/${MYSQL_DATABASE:proposta}?createDatabaseIfNotExist=true&serverTimezone=UTC

spring.datasource.username=${USUARIO_BANCO:root}
#spring.datasource.password=${USUARIO_SENHA_BANCO:sqlzup9553}
spring.datasource.password=${USUARIO_SENHA_BANCO:mysqlroot}


spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1


spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver


spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
#spring.jpa.hibernate.ddl-auto=create
spring.jpa.hibernate.naming-strategy=org.hibernate.cfg.ImproveNamingStrategy
spring.jpa.database-platform = org.hibernate.dialect.MySQL5Dialect


spring-cloud.version=3.0.3


#Spring Actuator
management.endpoint.health.show-details=always
management.endpoint.health.show-components=always
management.endpoints.web.exposure.include=info,health,prometheus
# prometheus
management.endpoints.prometheus.enabled=true
# labels métricas
management.metrics.tags.aplicacao=${NOME_DA_APLICACAO:serviço de proposta}
management.metrics.tags.ambiente=${AMBIENTE:desenvolvimento}


tempo.para.gerar.cartao=${PERIODICIDADADE_GERAR_CARTAO:100000}
url.servico.analise=${URL_SERVICO_ANALISE:http://localhost:9999/api/solicitacao}
servico.cartoes=${URL_SERVICO_CARTOES:http://localhost:8888/api/cartoes}
endpoint.cartoes=${URL_SERVICO_CARTOES:http://localhost:8888}


spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEYCLOAK_ISSUER_URI:http://localhost:18080/auth/realms/api-proposta}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${KEYCLOAK_JWKS_URI:http://localhost:18080/auth/realms/api-proposta/protocol/openid-connect/certs}


#logging.level.org.springframework.security=DEBUG

# desabilitando spring cloud balanceador de carga
#spring.cloud.loadbalancer.enabled=false
#spring.cloud.loadbalancer.cache.enabled=false
spring.cloud.loadbalancer.ribbon.enabled=false
eureka.client.fetchRegistry=true

# opentracing spring cloud jaeger configuracao
opentracing.jaeger.enabled=${JAEGER_ENABLED:true}
opentracing.jaeger.service-name=${spring.application.name:servico-propostas}
opentracing.jaeger.http-sender.url=${JAEGER_ENDPOINT:http://localhost:14268/api/traces}
opentracing.jaeger.probabilistic-sampler.sampling-rate=${JAEGER_SAMPLER:1}


